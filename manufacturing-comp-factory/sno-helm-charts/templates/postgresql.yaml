kind: Namespace
apiVersion: v1
metadata:
  name: {{ .Values.postgresql.namespace }}
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: postgresql
  namespace: {{ .Values.postgresql.namespace }}
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: 'system:openshift:scc:privileged'
  namespace: {{ .Values.postgresql.namespace }}
subjects:
  - kind: ServiceAccount
    name: postgresql
    namespace: {{ .Values.postgresql.namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'system:openshift:scc:privileged'
---
  apiVersion: v1
  kind: PersistentVolume
  metadata:
    name: postgresql-pv
    labels:
      type: local
  spec:
    storageClassName: manual 
    capacity:
      storage: {{ .Values.postgresql.storageCapacity }}
    accessModes:
      - ReadWriteOnce 
    persistentVolumeReclaimPolicy: Retain
    hostPath:
      path: {{ .Values.postgresql.path }} 
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgresql-pvc
  namespace: {{ .Values.postgresql.namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.postgresql.storageCapacity }}
  storageClassName: manual
---
kind: Secret
apiVersion: v1
metadata:
  name: postgresql
  namespace: {{ .Values.postgresql.namespace }}
stringData:
  POSTGRESQL_DATABASE: {{ .Values.postgresql.POSTGRESQL_DATABASE }}
  POSTGRESQL_PASSWORD: {{ .Values.postgresql.POSTGRESQL_PASSWORD }}
  POSTGRESQL_USER: {{ .Values.postgresql.POSTGRESQL_USER }}
type: Opaque
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: postgresql
  namespace: {{ .Values.postgresql.namespace }}
  labels:
    app: postgresql
    app.kubernetes.io/component: postgresql
    app.kubernetes.io/instance: postgresql
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/part-of: postgresql
    app.openshift.io/runtime: postgresql
    app.openshift.io/runtime-namespace: openshift
    app.openshift.io/runtime-version: '12'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: postgresql
        deploymentconfig: postgresql
      annotations:
        openshift.io/generated-by: OpenShiftWebConsole
    spec:
      restartPolicy: Always
      serviceAccountName: postgresql
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      securityContext:
        runAsUser: 1000
      containers:
        - resources: {}
          terminationMessagePath: /dev/termination-log
          name: postgresql
          ports:
            - containerPort: 5432
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: postgresql-1
              mountPath: /var/lib/pgsql/data
          terminationMessagePolicy: File
          envFrom:
            - secretRef:
                name: postgresql
          image: >-
            registry.redhat.io/rhscl/postgresql-12-rhel7@sha256:e0c8dbecd0b6bdc345742b5bca7b62ad39173d38f019b8c6d54b32a23074fcff
      serviceAccount: postgresql
      volumes:
        - name: postgresql-1
          persistentVolumeClaim:
            claimName: postgresql-pvc
      dnsPolicy: ClusterFirst
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
kind: Service
apiVersion: v1
metadata:
  name: postgresql
  namespace: {{ .Values.postgresql.namespace }}
spec:
  ports:
    - name: postgresql
      protocol: TCP
      port: 5432
      targetPort: 5432
  selector:
    app: postgresql
  type: ClusterIP
  sessionAffinity: None
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
